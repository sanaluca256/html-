<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <title>고정형 계산기</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: #f8f9fa;
      padding: 20px;
      margin: 0;
      display: flex;
      justify-content: center;
      align-items: flex-start;
      min-height: 100vh;
    }

    .calculator-container {
      width: 100%;
      max-width: 360px;
      box-shadow: 0 0 10px rgba(0,0,0,0.2);
      border-radius: 15px;
      background: white;
      overflow: hidden;
    }

    #display {
      font-size: 32px;
      padding: 10px;
      display: block;
      border-bottom: 1px solid #ccc;
      width: 100%;
      height: 60px;
      background: white;
      box-sizing: border-box;
      text-align: right;
    }

    table {
      width: 100%;
      border-collapse: collapse;
      table-layout: fixed;
    }

    td {
      padding: 0;
    }

    button {
      width: 100%;
      height: 60px;
      font-size: 22px;
      border: 1px solid #ccc;
      background-color: white;
      color: black;
      font-weight: bold;
      text-align: center;
      cursor: pointer;
      border-radius: 0;
      margin: 0;
      box-shadow: 1px 1px 5px rgba(0,0,0,0.1);
      transition: all 0.2s ease-in-out;
    }

    .button-gray { background-color: lightgray; }
    .button-yellow {
      background-color: gold;
      border: 1px solid #b58900;
      color: black;
    }

    button:active { filter: brightness(90%); }
    button:hover { background-color: #e0e0e0; }

    .logo {
      font-family: Arial, sans-serif;
      font-size: 14px;
      color: black;
      text-align: center;
      padding: 5px;
    }
    .logo span {
      color: blue;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <div class="calculator-container">
    <table>
      <tr><td colspan="4"><span id="display">0</span></td></tr>
      <tr>
        <td><button class="button button-gray">mc</button></td>
        <td><button class="button button-gray">mr</button></td>
        <td><button class="button button-gray">m-</button></td>
        <td><button class="button button-gray">m+</button></td>
      </tr>
      <tr>
        <td><button class="button button-gray">AC</button></td>
        <td><button class="button button-gray">√x</button></td>
        <td><button class="button button-gray">%</button></td>
        <td><button class="button button-yellow">÷</button></td>
      </tr>
      <tr>
        <td><button class="button">7</button></td>
        <td><button class="button">8</button></td>
        <td><button class="button">9</button></td>
        <td><button class="button button-yellow">×</button></td>
      </tr>
      <tr>
        <td><button class="button">4</button></td>
        <td><button class="button">5</button></td>
        <td><button class="button">6</button></td>
        <td><button class="button button-yellow">-</button></td>
      </tr>
      <tr>
        <td><button class="button">1</button></td>
        <td><button class="button">2</button></td>
        <td><button class="button">3</button></td>
        <td><button class="button button-yellow">+</button></td>
      </tr>
      <tr>
        <td><button class="button">0</button></td>
        <td><button class="button">.</button></td>
        <td><button class="button">+/-</button></td>
        <td><button class="button button-yellow">=</button></td>
      </tr> 
      <tr>
        <td><button class="button button-gray">π</button></td>
        <td><button class="button button-gray">x²</button></td>
        <td><button class="button button-gray">R2</button></td>
        <td><button class="button button-gray">R0</button></td>
      </tr>
      <tr>
        <td colspan="4" class="logo">© 20213041<span>sanaluca</span></td>
      </tr>
    </table>
  </div>

  <script>
    const display = document.querySelector("#display");

    function setDisplay(value) {
      display.innerText = value;
    }

    function getDisplay() {
      return display.innerText;
    }

    let curValue = 0;
    let operator = '';
    let newInput = false;
    let memory = 0; // 메모리 변수

    const buttons = document.querySelectorAll("button");
    buttons.forEach(button => {
      button.addEventListener("click", () => {
        const value = button.innerText;

        if (value === "AC") {
          setDisplay("0");
          curValue = 0;
          operator = '';
          newInput = false;

        } else if (value === "=") {
          const secondValue = parseFloat(getDisplay());
          let result = 0;

          switch (operator) {
            case '+': result = curValue + secondValue; break;
            case '-': result = curValue - secondValue; break;
            case '×': result = curValue * secondValue; break;
            case '÷': result = curValue / secondValue; break;
            default: result = secondValue;
          }

          setDisplay(result.toString());
          operator = '';
          newInput = true;

        } else if (["+", "-", "×", "÷"].includes(value)) {
          curValue = parseFloat(getDisplay());
          operator = value;
          newInput = true;

        } else if (value === "+/-") {
          const num = parseFloat(getDisplay());
          if (!isNaN(num)) setDisplay((-num).toString());

        } else if (value === "x²") {
          const num = parseFloat(getDisplay());
          if (!isNaN(num)) setDisplay((num * num).toString());

        } else if (value === "√x") {
          const num = parseFloat(getDisplay());
          if (!isNaN(num)) setDisplay(Math.sqrt(num).toString());

        } else if (value === "%") {
          const num = parseFloat(getDisplay());
          if (!isNaN(num)) setDisplay((num / 100).toString());

        } else if (value === "π") {
          setDisplay(Math.PI.toFixed(8));
          newInput = true;

        } else if (value === "R2") {
          setDisplay("2");
          newInput = true;

        } else if (value === "R0") {
          setDisplay("0");
          newInput = true;

        } else if (value === "mc") {
          memory = 0;

        } else if (value === "mr") {
          setDisplay(memory.toString());
          newInput = true;

        } else if (value === "m+") {
          const num = parseFloat(getDisplay());
          if (!isNaN(num)) memory += num;

        } else if (value === "m-") {
          const num = parseFloat(getDisplay());
          if (!isNaN(num)) memory -= num;

        } else {
          if (getDisplay() === "0" || getDisplay() === "Error" || newInput) {
            setDisplay(value);
            newInput = false;
          } else {
            setDisplay(getDisplay() + value);
          }
        }
      });
    });
  </script>
</body>
</html>
